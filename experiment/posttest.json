[{"question":"1. Which of the following is correct recurrence for worst case of Binary Search?","answers":{"a":" T(n) = 2T(n/2) + O(1) and T(1) = T(0) = O(1)","b":"T(n) = T(n-1) + O(1) and T(1) = T(0) = O(1) ","c":"T(n) = T(n/2) + O(1) and T(1) = T(0) = O(1) ","d":" T(n) = T(n-2) + O(1) and T(1) = T(0) = O(1) "},"correctAnswer":"c"},{"question":"2. Given a sorted array of integers, what can be the minimum worst case time complexity to find ceiling of a number x in given array? Ceiling of an element x is the smallest element present in array which is greater than or equal to x. Ceiling is not present if x is greater than the maximum element present in array. For example, if the given array is {12, 67, 90, 100, 300, 399} and x = 95, then output should be 100. ","answers":{"a":"O(LogLogn) ","b":"O(n)","c":"O(Logn) ","d":"O(Logn * Logn) "},"correctAnswer":"c"},{"question":"3. Consider a sorted array of n numbers. What would be the time complexity of the best known algorithm to find a pair a and b such that |a-b| = k , k being a positive integer.","answers":{"a":"O(n)","b":"O(nlogn) ","c":" O(n<sup>2</sup>>) ","d":"O(n)"},"correctAnswer":"a"},{"question":"4. Like linear search and binary search, ternary search is a searching technique that is used to determine the position of a specific value in an array. In binary search, the sorted array is divided into two parts while in ternary search, it is divided into 3 parts and then you determine in which part the element exists.<br>Ternary search, like binary search, is a divide-and-conquer algorithm. It is mandatory for the array (in which you will search for an element) to be sorted before you begin the search.<br>Is the following statement correct?'Ternary Search is better than Binary Search' ","answers":{"a":"True ","b":"False "},"correctAnswer":"b"}]
